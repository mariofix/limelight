"""Base Strcture

Revision ID: dd4730f795ff
Revises:
Create Date: 2023-07-30 21:38:39.515940

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "dd4730f795ff"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "firenze_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("fs_uniquifier", sa.String(length=255), nullable=False),
        sa.Column("last_login_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("current_login_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_login_ip", sa.String(length=64), nullable=True),
        sa.Column("current_login_ip", sa.String(length=64), nullable=True),
        sa.Column("login_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_firenze_user")),
        sa.UniqueConstraint("fs_uniquifier", name=op.f("uq_firenze_user_fs_uniquifier")),
        sa.UniqueConstraint("username", name=op.f("uq_firenze_user_username")),
    )
    op.create_table(
        "limelight_lineup",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(length=128), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=2048), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_lineup")),
        sa.UniqueConstraint("slug", name=op.f("uq_limelight_lineup_slug")),
    )
    op.create_table(
        "limelight_repo_github",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_repo_github")),
    )
    op.create_table(
        "limelight_repo_gitlab",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_repo_gitlab")),
    )
    op.create_table(
        "limelight_repo_pypi",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(length=128), nullable=True),
        sa.Column("pypi_json_url", sa.String(length=128), nullable=True),
        sa.Column("author", sa.String(length=255), nullable=True),
        sa.Column("author_email", sa.String(length=255), nullable=True),
        sa.Column("bugtrack_url", sa.String(length=128), nullable=True),
        sa.Column("classifiers", sa.JSON(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("description_content_type", sa.String(length=32), nullable=True),
        sa.Column("docs_url", sa.String(length=255), nullable=True),
        sa.Column("download_url", sa.String(length=255), nullable=True),
        sa.Column("downloads", sa.JSON(), nullable=False),
        sa.Column("home_page", sa.String(length=255), nullable=True),
        sa.Column("keywords", sa.String(length=2048), nullable=True),
        sa.Column("platform", sa.String(length=32), nullable=True),
        sa.Column("license", sa.String(length=32), nullable=True),
        sa.Column("maintainer", sa.String(length=255), nullable=True),
        sa.Column("maintainer_email", sa.String(length=255), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("project_url", sa.String(length=255), nullable=True),
        sa.Column("package_url", sa.String(length=255), nullable=True),
        sa.Column("project_urls", sa.JSON(), nullable=True),
        sa.Column("release_url", sa.String(length=255), nullable=True),
        sa.Column("requires_dist", sa.JSON(), nullable=True),
        sa.Column("requires_python", sa.String(length=32), nullable=True),
        sa.Column("summary", sa.String(length=255), nullable=True),
        sa.Column("version", sa.String(length=32), nullable=True),
        sa.Column("yanked", sa.Boolean(), nullable=False),
        sa.Column("yanked_reason", sa.String(length=255), nullable=True),
        sa.Column("last_serial", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_repo_pypi")),
    )
    op.create_table(
        "limelight_style",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(length=128), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=2048), nullable=False),
        sa.Column("moderated", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_style")),
        sa.UniqueConstraint("slug", name=op.f("uq_limelight_style_slug")),
    )
    op.create_table(
        "security_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_security_role")),
        sa.UniqueConstraint("name", name=op.f("uq_security_role_name")),
    )
    op.create_table(
        "limelight_star",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(length=128), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=True),
        sa.Column("description", sa.String(length=2048), nullable=True),
        sa.Column("star_url", sa.String(length=128), nullable=True),
        sa.Column("booklet_url", sa.String(length=128), nullable=True),
        sa.Column("demo_url", sa.String(length=128), nullable=True),
        sa.Column("pypi_id", sa.Integer(), nullable=True),
        sa.Column("freeze", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["pypi_id"], ["limelight_repo_pypi.id"], name=op.f("fk_limelight_star_pypi_id_limelight_repo_pypi")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_star")),
        sa.UniqueConstraint("slug", name=op.f("uq_limelight_star_slug")),
    )
    op.create_table(
        "limelight_star_queue",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "status", sa.Enum("CREATED", "PROCESSING", "ERROR", "COMPLETED", name="queuestatus"), nullable=False
        ),
        sa.Column("request_url", sa.String(length=255), nullable=True),
        sa.Column("request_data", sa.String(length=255), nullable=True),
        sa.Column("response_data", sa.JSON(), nullable=True),
        sa.Column("start_delay", sa.Integer(), nullable=False),
        sa.Column("post_process", sa.String(length=255), nullable=True),
        sa.Column("pypi_repo_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["pypi_repo_id"],
            ["limelight_repo_pypi.id"],
            name=op.f("fk_limelight_star_queue_pypi_repo_id_limelight_repo_pypi"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_star_queue")),
    )
    op.create_table(
        "security_roles_users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"], ["security_role.id"], name=op.f("fk_security_roles_users_role_id_security_role")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["firenze_user.id"], name=op.f("fk_security_roles_users_user_id_firenze_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_security_roles_users")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("security_roles_users")
    op.drop_table("limelight_star_queue")
    op.drop_table("limelight_star")
    op.drop_table("security_role")
    op.drop_table("limelight_style")
    op.drop_table("limelight_repo_pypi")
    op.drop_table("limelight_repo_gitlab")
    op.drop_table("limelight_repo_github")
    op.drop_table("limelight_lineup")
    op.drop_table("firenze_user")
    # ### end Alembic commands ###
