"""(re)Init-4

Revision ID: fcdd25bd325c
Revises:
Create Date: 2024-12-27 00:15:43.187816

"""

import flask_security
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "fcdd25bd325c"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "limelight_project",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(length=128), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=True),
        sa.Column("description", sa.String(length=2048), nullable=True),
        sa.Column(
            "category",
            sa.Enum("application", "framework", "library", "module", "project", name="projecttypes"),
            nullable=True,
        ),
        sa.Column("supported_python", sa.JSON(), nullable=True),
        sa.Column("project_url", sa.String(length=128), nullable=True),
        sa.Column("source_url", sa.String(length=128), nullable=True),
        sa.Column("documentation_url", sa.String(length=128), nullable=True),
        sa.Column("pypi_slug", sa.String(length=128), nullable=True),
        sa.Column("pypi_data", sa.JSON(), nullable=True),
        sa.Column("pypi_data_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("conda_slug", sa.String(length=128), nullable=True),
        sa.Column("conda_data", sa.JSON(), nullable=True),
        sa.Column("conda_data_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("git_url", sa.String(length=128), nullable=True),
        sa.Column("git_data", sa.JSON(), nullable=True),
        sa.Column("git_data_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("fetch_date_last", sa.DateTime(timezone=True), nullable=True),
        sa.Column("fetch_date_next", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.Column(
            "modified_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_project")),
        sa.UniqueConstraint("slug", name=op.f("uq_limelight_project_slug")),
    )
    op.create_table(
        "limelight_tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(length=128), nullable=False),
        sa.Column("title", sa.String(length=128), nullable=False),
        sa.Column("description", sa.String(length=2048), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.Column(
            "modified_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_limelight_tag")),
        sa.UniqueConstraint("slug", name=op.f("uq_limelight_tag_slug")),
    )
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("permissions", flask_security.datastore.AsaList(), nullable=True),
        sa.Column("update_datetime", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_role")),
        sa.UniqueConstraint("name", name=op.f("uq_role_name")),
    )
    op.create_table(
        "user",
        sa.Column("fs_webauthn_user_handle", sa.String(length=64), nullable=True),
        sa.Column("mf_recovery_codes", flask_security.datastore.AsaList(), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column("us_phone_number", sa.String(length=128), nullable=True),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("us_totp_secrets", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("fs_uniquifier", sa.String(length=64), nullable=False),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.Column("last_login_at", sa.DateTime(), nullable=True),
        sa.Column("current_login_at", sa.DateTime(), nullable=True),
        sa.Column("last_login_ip", sa.String(length=64), nullable=True),
        sa.Column("current_login_ip", sa.String(length=64), nullable=True),
        sa.Column("login_count", sa.Integer(), nullable=True),
        sa.Column("tf_primary_method", sa.String(length=64), nullable=True),
        sa.Column("tf_totp_secret", sa.String(length=255), nullable=True),
        sa.Column("tf_phone_number", sa.String(length=128), nullable=True),
        sa.Column("create_datetime", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("update_datetime", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("email", name=op.f("uq_user_email")),
        sa.UniqueConstraint("fs_uniquifier", name=op.f("uq_user_fs_uniquifier")),
        sa.UniqueConstraint("fs_webauthn_user_handle", name=op.f("uq_user_fs_webauthn_user_handle")),
        sa.UniqueConstraint("us_phone_number", name=op.f("uq_user_us_phone_number")),
        sa.UniqueConstraint("username", name=op.f("uq_user_username")),
    )
    op.create_table(
        "limelight_project_tags",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("extra_data", sa.JSON(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.Column(
            "modified_at", sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["limelight_project.id"],
            name=op.f("fk_limelight_project_tags_project_id_limelight_project"),
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["limelight_tag.id"], name=op.f("fk_limelight_project_tags_tag_id_limelight_tag")
        ),
        sa.PrimaryKeyConstraint("project_id", "tag_id", name=op.f("pk_limelight_project_tags")),
    )
    op.create_table(
        "roles_users",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"], name=op.f("fk_roles_users_role_id_role")),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_roles_users_user_id_user")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("roles_users")
    op.drop_table("limelight_project_tags")
    op.drop_table("user")
    op.drop_table("role")
    op.drop_table("limelight_tag")
    op.drop_table("limelight_project")
    # ### end Alembic commands ###
